var config_yaml = require('config-yaml/config-yaml').get_config_yaml();
var http = require('http');

var blueprint_utils = {
  get_blueprint_id: function(err, id){
    var url = config_yaml.blueprint.protocol + '://' + config_yaml.blueprint.ip + ':' + config_yaml.blueprint.port + config_yaml.blueprint.resource_uri + '/id';
    
    sails.log.debug('get_blueprint_id: url='+url);
    var reqGet = http.get(url, function(res) {
      res.on('data', function (chunk) {
        if(res.statusCode == 500){
          err({ message: JSON.parse(chunk) });
        }else if(res.statusCode == 404){
          err({ message: JSON.parse(chunk) });
        }else{
          sails.log.debug('get_blueprint_id: Result: '+chunk);
          id(chunk);
        }
      });
      
      res.on('error', function(e){
        console.error('Error get_blueprint_id:'+e.message);
        err(e);
      });
    });
    
    reqGet.end();
    reqGet.on('error', function (e) {
      console.error('Error closing the request get_blueprint_id:'+e.message);
      err(e);
    });
    
  },
  get_current_raw_bp: function(err, raw_bp){
    var url = config_yaml.blueprint.protocol + '://' + config_yaml.blueprint.ip + ':' + config_yaml.blueprint.port + config_yaml.blueprint.resource_uri + '/current_raw_bp';
    
    sails.log.debug('get_current_raw_bp: url='+url);
    var reqGet = http.get(url, function(res) {
      res.on('data', function (chunk) {
        if(res.statusCode == 500){
          err({ message: JSON.parse(chunk) });
        }else if(res.statusCode == 404){
          err({ message: JSON.parse(chunk) });
        }else{
          sails.log.debug('get_current_raw_bp: result: '+chunk);
          raw_bp(chunk);
        }
      });
      
      res.on('error', function(e){
        console.error('Error get_blueprint_id:'+e.message);
        err(e);
      });
    });
    
    reqGet.end();
    reqGet.on('error', function (e) {
      console.error('Error closing the request get_blueprint_id:'+e.message);
      err(e);
    });
  },
  get_blueprint_section: function(id, section, err, result){
    var url = config_yaml.blueprint.protocol + '://' + config_yaml.blueprint.ip + ':' + config_yaml.blueprint.port + config_yaml.blueprint.resource_uri + '?id=' + id + '&model=' + section;
    
    sails.log.debug('get_blueprint_section: url='+url);
    var reqGet = http.get(url, function(res) {
      res.on('data', function (chunk) {
        if(res.statusCode == 500){
          err({ message: JSON.parse(chunk) });
        }else if(res.statusCode == 404){
          err({ message: JSON.parse(chunk) });
        }else{
          sails.log.debug('get_blueprint_section: Result: '+chunk);
          result(chunk);
        }
      });
      
      res.on('error', function(e){
        console.error('Error get_blueprint_id:'+e.message);
        err(e);
      });
    });
    
    reqGet.end();
    reqGet.on('error', function (e) {
      console.error('Error closing the request get_blueprint_id:'+e.message);
      err(e);
    });
  }
}

module.exports = blueprint_utils;
