# This file is loaded by the build.sh script to create appropriate userdata and metadata.
# These data will be read by hpcloud tool to send out user-data and meta-data

# $BUILD_DIR & $MIME_SCRIPT & $BOOTSTRAP_DIR is set by the build.sh script
#
# The script must provide: 
# - USER_DATA : A file containing user-data to send out to hpcloud/openstack
# - META_DATA : A string containing meta-data to send out to hpcloud/openstack


if [ "$BUILD_DIR" = "" ]
then
   echo "cloudinit.conf: BUILD_DIR not defined. The build.sh script have to defined it. Do not call this script directly."
   exit
fi

if [ ! -d "$BUILD_DIR" ]
then
   echo "cloudinit.conf: '$BUILD_DIR' not created. This directory have to be created by the build.sh script. Do not call this script directly."
   exit
fi

if [ ! -d "$BOOTSTRAP_DIR" ]
then
   echo "cloudinit.conf: '$BOOTSTRAP_DIR' not accessible. This directory have to be checked by the build.sh script. Do not call this script directly."
   exit
fi

if [ ! -x "$MIME_SCRIPT" ]
then
   echo "cloudinit.conf: '$MIME_SCRIPT' not executable. This script have to be runnable. MIME_SCRIPT is set by the build.sh script. Do not call this script directly."
   exit
fi

META_DATA="cdksite=${APP_NAME}.tmpl,cdkdomain=forj.io,eroip=127.0.0.1,erosite=${APP_NAME}.tmpl,erodomain=forj.io"
META_JSON='{"cdksite":"'$APP_NAME'.tmpl","cdkdomain":"forj.io":"127.0.0.1","erosite":"'$APP_NAME'.tmpl","erodomain":"forj.io"}'

#TOMIME="$BUILD_DIR/boothook.sh:text/cloud-boothook cloudconfig.yaml $BUILD_DIR/boot-ero.sh"
TOMIME="$BUILD_DIR/boothook.sh:text/cloud-boothook cloudconfig.yaml $BUILD_DIR/build_proto.sh"

if [ "$GITREPO" = "" ]
then
   GITREPO=review:CDK-infra
fi

echo "build meta data replacement:
- \${metadata-json} by '$META_JSON'
- \${git-repo} by '$GITREPO'"
for FILE in $(echo $TOMIME | sed 's/:[.a-z/-]*//g')
do
    SRC=$(basename $FILE)
    if [ "$SRC" != "$FILE" ]
    then
       printf "$SRC: "
       if [ ! -f $BOOTSTRAP_DIR/$SRC ]
       then
          echo "'$BOOTSTRAP_DIR/$SRC' was not found. aborted."
          exit 1
       fi
       sed 's/${metadata-json}/'"$META_JSON"'/g
            s/${git-repo}/'"$GITREPO"'/g' $BOOTSTRAP_DIR/$SRC > $BUILD_DIR/$SRC
       echo "DONE"
    fi
done

for FILE in $TOMIME
do
   if [ "$(echo $FILE| grep ':')" = "" ]
   then
      TYPE=""
   else
      TYPE=$(echo $FILE| sed 's/^.*:/:/g')
   fi
   FILE=$(echo $FILE| sed 's/:.*//g')
   if [ "$(echo $FILE | cut -c1)" = / ]
   then # Metadata file built to use
       REAL_FILE="$(echo "$BUILD_DIR/$(basename $FILE)")"
   else # Source file to use
      REAL_FILE="$(echo "$BOOTSTRAP_DIR/$FILE")"
   fi
   if [ ! -f "$REAL_FILE" ]
   then
      echo "cloudinit.conf: $REAL_FILE not found."
      exit 1
   fi
   FILES="$FILES $REAL_FILE$TYPE"
   printf "$FILE\e[32m$TYPE\e[0m "
done

$MIME_SCRIPT $FILES -o $BUILD_DIR/userdata.mime
if [ $? -ne 0 ]
then
   echo "cloudinit.conf: Error while building $BUILD_DIR/userdata.mime with 'write-mime-multipart.py'. Please check."
   exit 1
fi
echo " > $BUILD_DIR/userdata.mime"


USER_DATA=$BUILD_DIR/userdata.mime


# vim: syntax=sh
